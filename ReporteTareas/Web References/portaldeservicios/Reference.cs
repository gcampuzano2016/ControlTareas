//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ReporteTareas.portaldeservicios {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceCallSoap", Namespace="http://tempuri.org/")]
    public partial class ServiceCall : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGrdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListbyClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListClosedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGrdbyProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGrdNextToEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListbyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGrdSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRelationProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRelationProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationServiceCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelationProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelationChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelationServiceCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRelationIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRelationChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRelationServiceCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelationIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRelationIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRelationChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRelationServiceCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOperatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRecursiveValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRelationArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListServiceCallbyCiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEffortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectInferaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListbyGroupDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServiceCall() {
            this.Url = global::ReporteTareas.Properties.Settings.Default.ReporteTareas_portaldeservicios_ServiceCall;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListCompletedEventHandler ListCompleted;
        
        /// <remarks/>
        public event ListGrdCompletedEventHandler ListGrdCompleted;
        
        /// <remarks/>
        public event ListbyClientCompletedEventHandler ListbyClientCompleted;
        
        /// <remarks/>
        public event ListClosedCompletedEventHandler ListClosedCompleted;
        
        /// <remarks/>
        public event ListGrdbyProjectCompletedEventHandler ListGrdbyProjectCompleted;
        
        /// <remarks/>
        public event ListGrdNextToEndCompletedEventHandler ListGrdNextToEndCompleted;
        
        /// <remarks/>
        public event ListbyGroupCompletedEventHandler ListbyGroupCompleted;
        
        /// <remarks/>
        public event GetObjectCompletedEventHandler GetObjectCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event ListGrdSearchCompletedEventHandler ListGrdSearchCompleted;
        
        /// <remarks/>
        public event ListRelationProblemCompletedEventHandler ListRelationProblemCompleted;
        
        /// <remarks/>
        public event AddRelationProblemCompletedEventHandler AddRelationProblemCompleted;
        
        /// <remarks/>
        public event DeleteRelationProblemCompletedEventHandler DeleteRelationProblemCompleted;
        
        /// <remarks/>
        public event DeleteRelationChangeCompletedEventHandler DeleteRelationChangeCompleted;
        
        /// <remarks/>
        public event DeleteRelationServiceCallCompletedEventHandler DeleteRelationServiceCallCompleted;
        
        /// <remarks/>
        public event UpdateRelationProblemCompletedEventHandler UpdateRelationProblemCompleted;
        
        /// <remarks/>
        public event UpdateRelationChangeCompletedEventHandler UpdateRelationChangeCompleted;
        
        /// <remarks/>
        public event UpdateRelationServiceCallCompletedEventHandler UpdateRelationServiceCallCompleted;
        
        /// <remarks/>
        public event AddRelationIncidentCompletedEventHandler AddRelationIncidentCompleted;
        
        /// <remarks/>
        public event AddRelationChangeCompletedEventHandler AddRelationChangeCompleted;
        
        /// <remarks/>
        public event AddRelationServiceCallCompletedEventHandler AddRelationServiceCallCompleted;
        
        /// <remarks/>
        public event DeleteRelationIncidentCompletedEventHandler DeleteRelationIncidentCompleted;
        
        /// <remarks/>
        public event UpdateRelationIncidentCompletedEventHandler UpdateRelationIncidentCompleted;
        
        /// <remarks/>
        public event ListRelationIncidentCompletedEventHandler ListRelationIncidentCompleted;
        
        /// <remarks/>
        public event ListRelationChangeCompletedEventHandler ListRelationChangeCompleted;
        
        /// <remarks/>
        public event ListRelationServiceCallCompletedEventHandler ListRelationServiceCallCompleted;
        
        /// <remarks/>
        public event ListFieldsCompletedEventHandler ListFieldsCompleted;
        
        /// <remarks/>
        public event ListOperatorsCompletedEventHandler ListOperatorsCompleted;
        
        /// <remarks/>
        public event ListValuesCompletedEventHandler ListValuesCompleted;
        
        /// <remarks/>
        public event ListRecursiveValuesCompletedEventHandler ListRecursiveValuesCompleted;
        
        /// <remarks/>
        public event ListRelationArticleCompletedEventHandler ListRelationArticleCompleted;
        
        /// <remarks/>
        public event ListServiceCallbyCiCompletedEventHandler ListServiceCallbyCiCompleted;
        
        /// <remarks/>
        public event GetEffortCompletedEventHandler GetEffortCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetObjectInferaceCompletedEventHandler GetObjectInferaceCompleted;
        
        /// <remarks/>
        public event ListbyGroupDateCompletedEventHandler ListbyGroupDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] List() {
            object[] results = this.Invoke("List", new object[0]);
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAsync() {
            this.ListAsync(null);
        }
        
        /// <remarks/>
        public void ListAsync(object userState) {
            if ((this.ListOperationCompleted == null)) {
                this.ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperationCompleted);
            }
            this.InvokeAsync("List", new object[0], this.ListOperationCompleted, userState);
        }
        
        private void OnListOperationCompleted(object arg) {
            if ((this.ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCompleted(this, new ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGrd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListGrd(int codUser, int projectId) {
            object[] results = this.Invoke("ListGrd", new object[] {
                        codUser,
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListGrdAsync(int codUser, int projectId) {
            this.ListGrdAsync(codUser, projectId, null);
        }
        
        /// <remarks/>
        public void ListGrdAsync(int codUser, int projectId, object userState) {
            if ((this.ListGrdOperationCompleted == null)) {
                this.ListGrdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGrdOperationCompleted);
            }
            this.InvokeAsync("ListGrd", new object[] {
                        codUser,
                        projectId}, this.ListGrdOperationCompleted, userState);
        }
        
        private void OnListGrdOperationCompleted(object arg) {
            if ((this.ListGrdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGrdCompleted(this, new ListGrdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListbyClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListbyClient(int codClient, int projectId) {
            object[] results = this.Invoke("ListbyClient", new object[] {
                        codClient,
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListbyClientAsync(int codClient, int projectId) {
            this.ListbyClientAsync(codClient, projectId, null);
        }
        
        /// <remarks/>
        public void ListbyClientAsync(int codClient, int projectId, object userState) {
            if ((this.ListbyClientOperationCompleted == null)) {
                this.ListbyClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListbyClientOperationCompleted);
            }
            this.InvokeAsync("ListbyClient", new object[] {
                        codClient,
                        projectId}, this.ListbyClientOperationCompleted, userState);
        }
        
        private void OnListbyClientOperationCompleted(object arg) {
            if ((this.ListbyClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListbyClientCompleted(this, new ListbyClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListClosed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListClosed(int codUser, int projectId) {
            object[] results = this.Invoke("ListClosed", new object[] {
                        codUser,
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListClosedAsync(int codUser, int projectId) {
            this.ListClosedAsync(codUser, projectId, null);
        }
        
        /// <remarks/>
        public void ListClosedAsync(int codUser, int projectId, object userState) {
            if ((this.ListClosedOperationCompleted == null)) {
                this.ListClosedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListClosedOperationCompleted);
            }
            this.InvokeAsync("ListClosed", new object[] {
                        codUser,
                        projectId}, this.ListClosedOperationCompleted, userState);
        }
        
        private void OnListClosedOperationCompleted(object arg) {
            if ((this.ListClosedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListClosedCompleted(this, new ListClosedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGrdbyProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListGrdbyProject(int projectId) {
            object[] results = this.Invoke("ListGrdbyProject", new object[] {
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListGrdbyProjectAsync(int projectId) {
            this.ListGrdbyProjectAsync(projectId, null);
        }
        
        /// <remarks/>
        public void ListGrdbyProjectAsync(int projectId, object userState) {
            if ((this.ListGrdbyProjectOperationCompleted == null)) {
                this.ListGrdbyProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGrdbyProjectOperationCompleted);
            }
            this.InvokeAsync("ListGrdbyProject", new object[] {
                        projectId}, this.ListGrdbyProjectOperationCompleted, userState);
        }
        
        private void OnListGrdbyProjectOperationCompleted(object arg) {
            if ((this.ListGrdbyProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGrdbyProjectCompleted(this, new ListGrdbyProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGrdNextToEnd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListGrdNextToEnd(int codUser, int projectId) {
            object[] results = this.Invoke("ListGrdNextToEnd", new object[] {
                        codUser,
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListGrdNextToEndAsync(int codUser, int projectId) {
            this.ListGrdNextToEndAsync(codUser, projectId, null);
        }
        
        /// <remarks/>
        public void ListGrdNextToEndAsync(int codUser, int projectId, object userState) {
            if ((this.ListGrdNextToEndOperationCompleted == null)) {
                this.ListGrdNextToEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGrdNextToEndOperationCompleted);
            }
            this.InvokeAsync("ListGrdNextToEnd", new object[] {
                        codUser,
                        projectId}, this.ListGrdNextToEndOperationCompleted, userState);
        }
        
        private void OnListGrdNextToEndOperationCompleted(object arg) {
            if ((this.ListGrdNextToEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGrdNextToEndCompleted(this, new ListGrdNextToEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListbyGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListbyGroup(int codUser, int projectId) {
            object[] results = this.Invoke("ListbyGroup", new object[] {
                        codUser,
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListbyGroupAsync(int codUser, int projectId) {
            this.ListbyGroupAsync(codUser, projectId, null);
        }
        
        /// <remarks/>
        public void ListbyGroupAsync(int codUser, int projectId, object userState) {
            if ((this.ListbyGroupOperationCompleted == null)) {
                this.ListbyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListbyGroupOperationCompleted);
            }
            this.InvokeAsync("ListbyGroup", new object[] {
                        codUser,
                        projectId}, this.ListbyGroupOperationCompleted, userState);
        }
        
        private void OnListbyGroupOperationCompleted(object arg) {
            if ((this.ListbyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListbyGroupCompleted(this, new ListbyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription GetObject(int id) {
            object[] results = this.Invoke("GetObject", new object[] {
                        id});
            return ((ServiceCallDescription)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectAsync(int id) {
            this.GetObjectAsync(id, null);
        }
        
        /// <remarks/>
        public void GetObjectAsync(int id, object userState) {
            if ((this.GetObjectOperationCompleted == null)) {
                this.GetObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectOperationCompleted);
            }
            this.InvokeAsync("GetObject", new object[] {
                        id}, this.GetObjectOperationCompleted, userState);
        }
        
        private void OnGetObjectOperationCompleted(object arg) {
            if ((this.GetObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectCompleted(this, new GetObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Add", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Add(ServiceCall1 item) {
            object[] results = this.Invoke("Add", new object[] {
                        item});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddAsync(ServiceCall1 item) {
            this.AddAsync(item, null);
        }
        
        /// <remarks/>
        public void AddAsync(ServiceCall1 item, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        item}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(ServiceCall1 item) {
            object[] results = this.Invoke("Update", new object[] {
                        item});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAsync(ServiceCall1 item) {
            this.UpdateAsync(item, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(ServiceCall1 item, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        item}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGrdSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallInfo[] ListGrdSearch(SearchCondition[] lstItem, int projectId) {
            object[] results = this.Invoke("ListGrdSearch", new object[] {
                        lstItem,
                        projectId});
            return ((ServiceCallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListGrdSearchAsync(SearchCondition[] lstItem, int projectId) {
            this.ListGrdSearchAsync(lstItem, projectId, null);
        }
        
        /// <remarks/>
        public void ListGrdSearchAsync(SearchCondition[] lstItem, int projectId, object userState) {
            if ((this.ListGrdSearchOperationCompleted == null)) {
                this.ListGrdSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGrdSearchOperationCompleted);
            }
            this.InvokeAsync("ListGrdSearch", new object[] {
                        lstItem,
                        projectId}, this.ListGrdSearchOperationCompleted, userState);
        }
        
        private void OnListGrdSearchOperationCompleted(object arg) {
            if ((this.ListGrdSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGrdSearchCompleted(this, new ListGrdSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRelationProblem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListRelationProblem(int problemId) {
            object[] results = this.Invoke("ListRelationProblem", new object[] {
                        problemId});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRelationProblemAsync(int problemId) {
            this.ListRelationProblemAsync(problemId, null);
        }
        
        /// <remarks/>
        public void ListRelationProblemAsync(int problemId, object userState) {
            if ((this.ListRelationProblemOperationCompleted == null)) {
                this.ListRelationProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRelationProblemOperationCompleted);
            }
            this.InvokeAsync("ListRelationProblem", new object[] {
                        problemId}, this.ListRelationProblemOperationCompleted, userState);
        }
        
        private void OnListRelationProblemOperationCompleted(object arg) {
            if ((this.ListRelationProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRelationProblemCompleted(this, new ListRelationProblemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRelationProblem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRelationProblem(int serviceId, int problemId, int relationCause, int userId) {
            this.Invoke("AddRelationProblem", new object[] {
                        serviceId,
                        problemId,
                        relationCause,
                        userId});
        }
        
        /// <remarks/>
        public void AddRelationProblemAsync(int serviceId, int problemId, int relationCause, int userId) {
            this.AddRelationProblemAsync(serviceId, problemId, relationCause, userId, null);
        }
        
        /// <remarks/>
        public void AddRelationProblemAsync(int serviceId, int problemId, int relationCause, int userId, object userState) {
            if ((this.AddRelationProblemOperationCompleted == null)) {
                this.AddRelationProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRelationProblemOperationCompleted);
            }
            this.InvokeAsync("AddRelationProblem", new object[] {
                        serviceId,
                        problemId,
                        relationCause,
                        userId}, this.AddRelationProblemOperationCompleted, userState);
        }
        
        private void OnAddRelationProblemOperationCompleted(object arg) {
            if ((this.AddRelationProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRelationProblemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRelationProblem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRelationProblem(int serviceId, int problemId) {
            this.Invoke("DeleteRelationProblem", new object[] {
                        serviceId,
                        problemId});
        }
        
        /// <remarks/>
        public void DeleteRelationProblemAsync(int serviceId, int problemId) {
            this.DeleteRelationProblemAsync(serviceId, problemId, null);
        }
        
        /// <remarks/>
        public void DeleteRelationProblemAsync(int serviceId, int problemId, object userState) {
            if ((this.DeleteRelationProblemOperationCompleted == null)) {
                this.DeleteRelationProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationProblemOperationCompleted);
            }
            this.InvokeAsync("DeleteRelationProblem", new object[] {
                        serviceId,
                        problemId}, this.DeleteRelationProblemOperationCompleted, userState);
        }
        
        private void OnDeleteRelationProblemOperationCompleted(object arg) {
            if ((this.DeleteRelationProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationProblemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRelationChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRelationChange(int serviceId, int changeId) {
            this.Invoke("DeleteRelationChange", new object[] {
                        serviceId,
                        changeId});
        }
        
        /// <remarks/>
        public void DeleteRelationChangeAsync(int serviceId, int changeId) {
            this.DeleteRelationChangeAsync(serviceId, changeId, null);
        }
        
        /// <remarks/>
        public void DeleteRelationChangeAsync(int serviceId, int changeId, object userState) {
            if ((this.DeleteRelationChangeOperationCompleted == null)) {
                this.DeleteRelationChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationChangeOperationCompleted);
            }
            this.InvokeAsync("DeleteRelationChange", new object[] {
                        serviceId,
                        changeId}, this.DeleteRelationChangeOperationCompleted, userState);
        }
        
        private void OnDeleteRelationChangeOperationCompleted(object arg) {
            if ((this.DeleteRelationChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRelationServiceCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRelationServiceCall(int serviceParentId, int serviceId) {
            this.Invoke("DeleteRelationServiceCall", new object[] {
                        serviceParentId,
                        serviceId});
        }
        
        /// <remarks/>
        public void DeleteRelationServiceCallAsync(int serviceParentId, int serviceId) {
            this.DeleteRelationServiceCallAsync(serviceParentId, serviceId, null);
        }
        
        /// <remarks/>
        public void DeleteRelationServiceCallAsync(int serviceParentId, int serviceId, object userState) {
            if ((this.DeleteRelationServiceCallOperationCompleted == null)) {
                this.DeleteRelationServiceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationServiceCallOperationCompleted);
            }
            this.InvokeAsync("DeleteRelationServiceCall", new object[] {
                        serviceParentId,
                        serviceId}, this.DeleteRelationServiceCallOperationCompleted, userState);
        }
        
        private void OnDeleteRelationServiceCallOperationCompleted(object arg) {
            if ((this.DeleteRelationServiceCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationServiceCallCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRelationProblem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRelationProblem(int serviceId, int problemId, int relationCause) {
            this.Invoke("UpdateRelationProblem", new object[] {
                        serviceId,
                        problemId,
                        relationCause});
        }
        
        /// <remarks/>
        public void UpdateRelationProblemAsync(int serviceId, int problemId, int relationCause) {
            this.UpdateRelationProblemAsync(serviceId, problemId, relationCause, null);
        }
        
        /// <remarks/>
        public void UpdateRelationProblemAsync(int serviceId, int problemId, int relationCause, object userState) {
            if ((this.UpdateRelationProblemOperationCompleted == null)) {
                this.UpdateRelationProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelationProblemOperationCompleted);
            }
            this.InvokeAsync("UpdateRelationProblem", new object[] {
                        serviceId,
                        problemId,
                        relationCause}, this.UpdateRelationProblemOperationCompleted, userState);
        }
        
        private void OnUpdateRelationProblemOperationCompleted(object arg) {
            if ((this.UpdateRelationProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelationProblemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRelationChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRelationChange(int serviceId, int changeId, int relationCause) {
            this.Invoke("UpdateRelationChange", new object[] {
                        serviceId,
                        changeId,
                        relationCause});
        }
        
        /// <remarks/>
        public void UpdateRelationChangeAsync(int serviceId, int changeId, int relationCause) {
            this.UpdateRelationChangeAsync(serviceId, changeId, relationCause, null);
        }
        
        /// <remarks/>
        public void UpdateRelationChangeAsync(int serviceId, int changeId, int relationCause, object userState) {
            if ((this.UpdateRelationChangeOperationCompleted == null)) {
                this.UpdateRelationChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelationChangeOperationCompleted);
            }
            this.InvokeAsync("UpdateRelationChange", new object[] {
                        serviceId,
                        changeId,
                        relationCause}, this.UpdateRelationChangeOperationCompleted, userState);
        }
        
        private void OnUpdateRelationChangeOperationCompleted(object arg) {
            if ((this.UpdateRelationChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelationChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRelationServiceCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRelationServiceCall(int serviceParentId, int serviceId, int relationCause) {
            this.Invoke("UpdateRelationServiceCall", new object[] {
                        serviceParentId,
                        serviceId,
                        relationCause});
        }
        
        /// <remarks/>
        public void UpdateRelationServiceCallAsync(int serviceParentId, int serviceId, int relationCause) {
            this.UpdateRelationServiceCallAsync(serviceParentId, serviceId, relationCause, null);
        }
        
        /// <remarks/>
        public void UpdateRelationServiceCallAsync(int serviceParentId, int serviceId, int relationCause, object userState) {
            if ((this.UpdateRelationServiceCallOperationCompleted == null)) {
                this.UpdateRelationServiceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelationServiceCallOperationCompleted);
            }
            this.InvokeAsync("UpdateRelationServiceCall", new object[] {
                        serviceParentId,
                        serviceId,
                        relationCause}, this.UpdateRelationServiceCallOperationCompleted, userState);
        }
        
        private void OnUpdateRelationServiceCallOperationCompleted(object arg) {
            if ((this.UpdateRelationServiceCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelationServiceCallCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRelationIncident", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRelationIncident(int serviceId, int incidenId, int relationCause, int userId) {
            this.Invoke("AddRelationIncident", new object[] {
                        serviceId,
                        incidenId,
                        relationCause,
                        userId});
        }
        
        /// <remarks/>
        public void AddRelationIncidentAsync(int serviceId, int incidenId, int relationCause, int userId) {
            this.AddRelationIncidentAsync(serviceId, incidenId, relationCause, userId, null);
        }
        
        /// <remarks/>
        public void AddRelationIncidentAsync(int serviceId, int incidenId, int relationCause, int userId, object userState) {
            if ((this.AddRelationIncidentOperationCompleted == null)) {
                this.AddRelationIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRelationIncidentOperationCompleted);
            }
            this.InvokeAsync("AddRelationIncident", new object[] {
                        serviceId,
                        incidenId,
                        relationCause,
                        userId}, this.AddRelationIncidentOperationCompleted, userState);
        }
        
        private void OnAddRelationIncidentOperationCompleted(object arg) {
            if ((this.AddRelationIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRelationIncidentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRelationChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRelationChange(int serviceId, int changeId, int relationCause, int userId) {
            this.Invoke("AddRelationChange", new object[] {
                        serviceId,
                        changeId,
                        relationCause,
                        userId});
        }
        
        /// <remarks/>
        public void AddRelationChangeAsync(int serviceId, int changeId, int relationCause, int userId) {
            this.AddRelationChangeAsync(serviceId, changeId, relationCause, userId, null);
        }
        
        /// <remarks/>
        public void AddRelationChangeAsync(int serviceId, int changeId, int relationCause, int userId, object userState) {
            if ((this.AddRelationChangeOperationCompleted == null)) {
                this.AddRelationChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRelationChangeOperationCompleted);
            }
            this.InvokeAsync("AddRelationChange", new object[] {
                        serviceId,
                        changeId,
                        relationCause,
                        userId}, this.AddRelationChangeOperationCompleted, userState);
        }
        
        private void OnAddRelationChangeOperationCompleted(object arg) {
            if ((this.AddRelationChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRelationChangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRelationServiceCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRelationServiceCall(int serviceParentId, int serviceId, int relationCause, int userId) {
            this.Invoke("AddRelationServiceCall", new object[] {
                        serviceParentId,
                        serviceId,
                        relationCause,
                        userId});
        }
        
        /// <remarks/>
        public void AddRelationServiceCallAsync(int serviceParentId, int serviceId, int relationCause, int userId) {
            this.AddRelationServiceCallAsync(serviceParentId, serviceId, relationCause, userId, null);
        }
        
        /// <remarks/>
        public void AddRelationServiceCallAsync(int serviceParentId, int serviceId, int relationCause, int userId, object userState) {
            if ((this.AddRelationServiceCallOperationCompleted == null)) {
                this.AddRelationServiceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRelationServiceCallOperationCompleted);
            }
            this.InvokeAsync("AddRelationServiceCall", new object[] {
                        serviceParentId,
                        serviceId,
                        relationCause,
                        userId}, this.AddRelationServiceCallOperationCompleted, userState);
        }
        
        private void OnAddRelationServiceCallOperationCompleted(object arg) {
            if ((this.AddRelationServiceCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRelationServiceCallCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRelationIncident", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRelationIncident(int serviceId, int incidenId) {
            this.Invoke("DeleteRelationIncident", new object[] {
                        serviceId,
                        incidenId});
        }
        
        /// <remarks/>
        public void DeleteRelationIncidentAsync(int serviceId, int incidenId) {
            this.DeleteRelationIncidentAsync(serviceId, incidenId, null);
        }
        
        /// <remarks/>
        public void DeleteRelationIncidentAsync(int serviceId, int incidenId, object userState) {
            if ((this.DeleteRelationIncidentOperationCompleted == null)) {
                this.DeleteRelationIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationIncidentOperationCompleted);
            }
            this.InvokeAsync("DeleteRelationIncident", new object[] {
                        serviceId,
                        incidenId}, this.DeleteRelationIncidentOperationCompleted, userState);
        }
        
        private void OnDeleteRelationIncidentOperationCompleted(object arg) {
            if ((this.DeleteRelationIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationIncidentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRelationIncident", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRelationIncident(int serviceId, int incidenId, int relationCause) {
            this.Invoke("UpdateRelationIncident", new object[] {
                        serviceId,
                        incidenId,
                        relationCause});
        }
        
        /// <remarks/>
        public void UpdateRelationIncidentAsync(int serviceId, int incidenId, int relationCause) {
            this.UpdateRelationIncidentAsync(serviceId, incidenId, relationCause, null);
        }
        
        /// <remarks/>
        public void UpdateRelationIncidentAsync(int serviceId, int incidenId, int relationCause, object userState) {
            if ((this.UpdateRelationIncidentOperationCompleted == null)) {
                this.UpdateRelationIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelationIncidentOperationCompleted);
            }
            this.InvokeAsync("UpdateRelationIncident", new object[] {
                        serviceId,
                        incidenId,
                        relationCause}, this.UpdateRelationIncidentOperationCompleted, userState);
        }
        
        private void OnUpdateRelationIncidentOperationCompleted(object arg) {
            if ((this.UpdateRelationIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelationIncidentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRelationIncident", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListRelationIncident(int incidentId) {
            object[] results = this.Invoke("ListRelationIncident", new object[] {
                        incidentId});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRelationIncidentAsync(int incidentId) {
            this.ListRelationIncidentAsync(incidentId, null);
        }
        
        /// <remarks/>
        public void ListRelationIncidentAsync(int incidentId, object userState) {
            if ((this.ListRelationIncidentOperationCompleted == null)) {
                this.ListRelationIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRelationIncidentOperationCompleted);
            }
            this.InvokeAsync("ListRelationIncident", new object[] {
                        incidentId}, this.ListRelationIncidentOperationCompleted, userState);
        }
        
        private void OnListRelationIncidentOperationCompleted(object arg) {
            if ((this.ListRelationIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRelationIncidentCompleted(this, new ListRelationIncidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRelationChange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListRelationChange(int chanId) {
            object[] results = this.Invoke("ListRelationChange", new object[] {
                        chanId});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRelationChangeAsync(int chanId) {
            this.ListRelationChangeAsync(chanId, null);
        }
        
        /// <remarks/>
        public void ListRelationChangeAsync(int chanId, object userState) {
            if ((this.ListRelationChangeOperationCompleted == null)) {
                this.ListRelationChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRelationChangeOperationCompleted);
            }
            this.InvokeAsync("ListRelationChange", new object[] {
                        chanId}, this.ListRelationChangeOperationCompleted, userState);
        }
        
        private void OnListRelationChangeOperationCompleted(object arg) {
            if ((this.ListRelationChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRelationChangeCompleted(this, new ListRelationChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRelationServiceCall", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListRelationServiceCall(int serviceId) {
            object[] results = this.Invoke("ListRelationServiceCall", new object[] {
                        serviceId});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRelationServiceCallAsync(int serviceId) {
            this.ListRelationServiceCallAsync(serviceId, null);
        }
        
        /// <remarks/>
        public void ListRelationServiceCallAsync(int serviceId, object userState) {
            if ((this.ListRelationServiceCallOperationCompleted == null)) {
                this.ListRelationServiceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRelationServiceCallOperationCompleted);
            }
            this.InvokeAsync("ListRelationServiceCall", new object[] {
                        serviceId}, this.ListRelationServiceCallOperationCompleted, userState);
        }
        
        private void OnListRelationServiceCallOperationCompleted(object arg) {
            if ((this.ListRelationServiceCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRelationServiceCallCompleted(this, new ListRelationServiceCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListFields", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchField[] ListFields(string language, int project_id) {
            object[] results = this.Invoke("ListFields", new object[] {
                        language,
                        project_id});
            return ((SearchField[])(results[0]));
        }
        
        /// <remarks/>
        public void ListFieldsAsync(string language, int project_id) {
            this.ListFieldsAsync(language, project_id, null);
        }
        
        /// <remarks/>
        public void ListFieldsAsync(string language, int project_id, object userState) {
            if ((this.ListFieldsOperationCompleted == null)) {
                this.ListFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFieldsOperationCompleted);
            }
            this.InvokeAsync("ListFields", new object[] {
                        language,
                        project_id}, this.ListFieldsOperationCompleted, userState);
        }
        
        private void OnListFieldsOperationCompleted(object arg) {
            if ((this.ListFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListFieldsCompleted(this, new ListFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOperators", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchOperator[] ListOperators(int fieldId) {
            object[] results = this.Invoke("ListOperators", new object[] {
                        fieldId});
            return ((SearchOperator[])(results[0]));
        }
        
        /// <remarks/>
        public void ListOperatorsAsync(int fieldId) {
            this.ListOperatorsAsync(fieldId, null);
        }
        
        /// <remarks/>
        public void ListOperatorsAsync(int fieldId, object userState) {
            if ((this.ListOperatorsOperationCompleted == null)) {
                this.ListOperatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperatorsOperationCompleted);
            }
            this.InvokeAsync("ListOperators", new object[] {
                        fieldId}, this.ListOperatorsOperationCompleted, userState);
        }
        
        private void OnListOperatorsOperationCompleted(object arg) {
            if ((this.ListOperatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOperatorsCompleted(this, new ListOperatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchValue[] ListValues(int fieldId, int projectId) {
            object[] results = this.Invoke("ListValues", new object[] {
                        fieldId,
                        projectId});
            return ((SearchValue[])(results[0]));
        }
        
        /// <remarks/>
        public void ListValuesAsync(int fieldId, int projectId) {
            this.ListValuesAsync(fieldId, projectId, null);
        }
        
        /// <remarks/>
        public void ListValuesAsync(int fieldId, int projectId, object userState) {
            if ((this.ListValuesOperationCompleted == null)) {
                this.ListValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListValuesOperationCompleted);
            }
            this.InvokeAsync("ListValues", new object[] {
                        fieldId,
                        projectId}, this.ListValuesOperationCompleted, userState);
        }
        
        private void OnListValuesOperationCompleted(object arg) {
            if ((this.ListValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListValuesCompleted(this, new ListValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRecursiveValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchRecursiveValue[] ListRecursiveValues(int fieldId, int projectId) {
            object[] results = this.Invoke("ListRecursiveValues", new object[] {
                        fieldId,
                        projectId});
            return ((SearchRecursiveValue[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRecursiveValuesAsync(int fieldId, int projectId) {
            this.ListRecursiveValuesAsync(fieldId, projectId, null);
        }
        
        /// <remarks/>
        public void ListRecursiveValuesAsync(int fieldId, int projectId, object userState) {
            if ((this.ListRecursiveValuesOperationCompleted == null)) {
                this.ListRecursiveValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRecursiveValuesOperationCompleted);
            }
            this.InvokeAsync("ListRecursiveValues", new object[] {
                        fieldId,
                        projectId}, this.ListRecursiveValuesOperationCompleted, userState);
        }
        
        private void OnListRecursiveValuesOperationCompleted(object arg) {
            if ((this.ListRecursiveValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRecursiveValuesCompleted(this, new ListRecursiveValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRelationArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListRelationArticle(int articleId) {
            object[] results = this.Invoke("ListRelationArticle", new object[] {
                        articleId});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRelationArticleAsync(int articleId) {
            this.ListRelationArticleAsync(articleId, null);
        }
        
        /// <remarks/>
        public void ListRelationArticleAsync(int articleId, object userState) {
            if ((this.ListRelationArticleOperationCompleted == null)) {
                this.ListRelationArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRelationArticleOperationCompleted);
            }
            this.InvokeAsync("ListRelationArticle", new object[] {
                        articleId}, this.ListRelationArticleOperationCompleted, userState);
        }
        
        private void OnListRelationArticleOperationCompleted(object arg) {
            if ((this.ListRelationArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRelationArticleCompleted(this, new ListRelationArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListServiceCallbyCi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListServiceCallbyCi(int ciId) {
            object[] results = this.Invoke("ListServiceCallbyCi", new object[] {
                        ciId});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListServiceCallbyCiAsync(int ciId) {
            this.ListServiceCallbyCiAsync(ciId, null);
        }
        
        /// <remarks/>
        public void ListServiceCallbyCiAsync(int ciId, object userState) {
            if ((this.ListServiceCallbyCiOperationCompleted == null)) {
                this.ListServiceCallbyCiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListServiceCallbyCiOperationCompleted);
            }
            this.InvokeAsync("ListServiceCallbyCi", new object[] {
                        ciId}, this.ListServiceCallbyCiOperationCompleted, userState);
        }
        
        private void OnListServiceCallbyCiOperationCompleted(object arg) {
            if ((this.ListServiceCallbyCiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListServiceCallbyCiCompleted(this, new ListServiceCallbyCiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEffort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription GetEffort(int id) {
            object[] results = this.Invoke("GetEffort", new object[] {
                        id});
            return ((ServiceCallDescription)(results[0]));
        }
        
        /// <remarks/>
        public void GetEffortAsync(int id) {
            this.GetEffortAsync(id, null);
        }
        
        /// <remarks/>
        public void GetEffortAsync(int id, object userState) {
            if ((this.GetEffortOperationCompleted == null)) {
                this.GetEffortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEffortOperationCompleted);
            }
            this.InvokeAsync("GetEffort", new object[] {
                        id}, this.GetEffortOperationCompleted, userState);
        }
        
        private void OnGetEffortOperationCompleted(object arg) {
            if ((this.GetEffortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEffortCompleted(this, new GetEffortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTask(int id) {
            object[] results = this.Invoke("GetTask", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(int id) {
            this.GetTaskAsync(id, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(int id, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        id}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObjectInferace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription GetObjectInferace(string id) {
            object[] results = this.Invoke("GetObjectInferace", new object[] {
                        id});
            return ((ServiceCallDescription)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectInferaceAsync(string id) {
            this.GetObjectInferaceAsync(id, null);
        }
        
        /// <remarks/>
        public void GetObjectInferaceAsync(string id, object userState) {
            if ((this.GetObjectInferaceOperationCompleted == null)) {
                this.GetObjectInferaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectInferaceOperationCompleted);
            }
            this.InvokeAsync("GetObjectInferace", new object[] {
                        id}, this.GetObjectInferaceOperationCompleted, userState);
        }
        
        private void OnGetObjectInferaceOperationCompleted(object arg) {
            if ((this.GetObjectInferaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectInferaceCompleted(this, new GetObjectInferaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListbyGroupDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceCallDescription[] ListbyGroupDate(int groupId, System.DateTime dateIni) {
            object[] results = this.Invoke("ListbyGroupDate", new object[] {
                        groupId,
                        dateIni});
            return ((ServiceCallDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ListbyGroupDateAsync(int groupId, System.DateTime dateIni) {
            this.ListbyGroupDateAsync(groupId, dateIni, null);
        }
        
        /// <remarks/>
        public void ListbyGroupDateAsync(int groupId, System.DateTime dateIni, object userState) {
            if ((this.ListbyGroupDateOperationCompleted == null)) {
                this.ListbyGroupDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListbyGroupDateOperationCompleted);
            }
            this.InvokeAsync("ListbyGroupDate", new object[] {
                        groupId,
                        dateIni}, this.ListbyGroupDateOperationCompleted, userState);
        }
        
        private void OnListbyGroupDateOperationCompleted(object arg) {
            if ((this.ListbyGroupDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListbyGroupDateCompleted(this, new ListbyGroupDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceCallInfo {
        
        private System.Nullable<int> currentTimeField;
        
        private System.Nullable<int> currentProgressField;
        
        private System.Nullable<int> solvedField;
        
        private System.Nullable<int> canceledField;
        
        private string reasonField;
        
        private string servicioField;
        
        private string edificioField;
        
        private string sedeField;
        
        private string paisField;
        
        private string ciudadField;
        
        private string pisoField;
        
        private string departamentoField;
        
        private string authorField;
        
        private int idField;
        
        private System.Nullable<int> idbyProjectField;
        
        private string projectNameField;
        
        private int projectIdField;
        
        private string statusNameField;
        
        private string customerNameField;
        
        private string companyNameField;
        
        private string providerNameField;
        
        private string categoryNameField;
        
        private string responsibleNameField;
        
        private System.Nullable<System.DateTime> expiredDateField;
        
        private string priorityNameField;
        
        private string groupNameField;
        
        private System.Nullable<int> foregroundColorField;
        
        private System.Nullable<int> backgroundColorField;
        
        private string backgroundColorRgbField;
        
        private string foregroundColorRgbField;
        
        private string subjectField;
        
        private string urgencyNameField;
        
        private string serviceNameField;
        
        private string slaNameField;
        
        private string registryTypeNameField;
        
        private string impactNameField;
        
        private string categoryHierarchyField;
        
        private string autorNameField;
        
        private string ciNameField;
        
        private System.Nullable<System.DateTime> openedDateField;
        
        private System.Nullable<System.DateTime> closedDateField;
        
        private System.Nullable<System.DateTime> attentionEstimatedDateField;
        
        private System.Nullable<System.DateTime> attentionRealDateField;
        
        private string receptorNameField;
        
        private System.Nullable<long> stateIdField;
        
        private System.Nullable<System.DateTime> solutionRealDateField;
        
        private System.Nullable<int> finalStatusField;
        
        private int statusIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> currentTime {
            get {
                return this.currentTimeField;
            }
            set {
                this.currentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> currentProgress {
            get {
                return this.currentProgressField;
            }
            set {
                this.currentProgressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Solved {
            get {
                return this.solvedField;
            }
            set {
                this.solvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> canceled {
            get {
                return this.canceledField;
            }
            set {
                this.canceledField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string Servicio {
            get {
                return this.servicioField;
            }
            set {
                this.servicioField = value;
            }
        }
        
        /// <remarks/>
        public string Edificio {
            get {
                return this.edificioField;
            }
            set {
                this.edificioField = value;
            }
        }
        
        /// <remarks/>
        public string Sede {
            get {
                return this.sedeField;
            }
            set {
                this.sedeField = value;
            }
        }
        
        /// <remarks/>
        public string Pais {
            get {
                return this.paisField;
            }
            set {
                this.paisField = value;
            }
        }
        
        /// <remarks/>
        public string Ciudad {
            get {
                return this.ciudadField;
            }
            set {
                this.ciudadField = value;
            }
        }
        
        /// <remarks/>
        public string Piso {
            get {
                return this.pisoField;
            }
            set {
                this.pisoField = value;
            }
        }
        
        /// <remarks/>
        public string Departamento {
            get {
                return this.departamentoField;
            }
            set {
                this.departamentoField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IdbyProject {
            get {
                return this.idbyProjectField;
            }
            set {
                this.idbyProjectField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string StatusName {
            get {
                return this.statusNameField;
            }
            set {
                this.statusNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderName {
            get {
                return this.providerNameField;
            }
            set {
                this.providerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleName {
            get {
                return this.responsibleNameField;
            }
            set {
                this.responsibleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpiredDate {
            get {
                return this.expiredDateField;
            }
            set {
                this.expiredDateField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityName {
            get {
                return this.priorityNameField;
            }
            set {
                this.priorityNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ForegroundColor {
            get {
                return this.foregroundColorField;
            }
            set {
                this.foregroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BackgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        public string BackgroundColorRgb {
            get {
                return this.backgroundColorRgbField;
            }
            set {
                this.backgroundColorRgbField = value;
            }
        }
        
        /// <remarks/>
        public string ForegroundColorRgb {
            get {
                return this.foregroundColorRgbField;
            }
            set {
                this.foregroundColorRgbField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string UrgencyName {
            get {
                return this.urgencyNameField;
            }
            set {
                this.urgencyNameField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string SlaName {
            get {
                return this.slaNameField;
            }
            set {
                this.slaNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegistryTypeName {
            get {
                return this.registryTypeNameField;
            }
            set {
                this.registryTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string ImpactName {
            get {
                return this.impactNameField;
            }
            set {
                this.impactNameField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryHierarchy {
            get {
                return this.categoryHierarchyField;
            }
            set {
                this.categoryHierarchyField = value;
            }
        }
        
        /// <remarks/>
        public string AutorName {
            get {
                return this.autorNameField;
            }
            set {
                this.autorNameField = value;
            }
        }
        
        /// <remarks/>
        public string CiName {
            get {
                return this.ciNameField;
            }
            set {
                this.ciNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> OpenedDate {
            get {
                return this.openedDateField;
            }
            set {
                this.openedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.closedDateField;
            }
            set {
                this.closedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AttentionEstimatedDate {
            get {
                return this.attentionEstimatedDateField;
            }
            set {
                this.attentionEstimatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AttentionRealDate {
            get {
                return this.attentionRealDateField;
            }
            set {
                this.attentionRealDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReceptorName {
            get {
                return this.receptorNameField;
            }
            set {
                this.receptorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> StateId {
            get {
                return this.stateIdField;
            }
            set {
                this.stateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SolutionRealDate {
            get {
                return this.solutionRealDateField;
            }
            set {
                this.solutionRealDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FinalStatus {
            get {
                return this.finalStatusField;
            }
            set {
                this.finalStatusField = value;
            }
        }
        
        /// <remarks/>
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchRecursiveValue {
        
        private int idField;
        
        private string nameField;
        
        private int parentField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Parent {
            get {
                return this.parentField;
            }
            set {
                this.parentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchValue {
        
        private string valueField;
        
        private string nameField;
        
        private string stbe_ecabField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Stbe_ecab {
            get {
                return this.stbe_ecabField;
            }
            set {
                this.stbe_ecabField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchOperator {
        
        private string valueField;
        
        private string nameField;
        
        private int idField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchField {
        
        private int idField;
        
        private string keyField;
        
        private string nameField;
        
        private string typeField;
        
        private string maskField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Mask {
            get {
                return this.maskField;
            }
            set {
                this.maskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchCondition {
        
        private string conditionOperatorTxtField;
        
        private string fieldTxtField;
        
        private string filterOperatorField;
        
        private string fieldField;
        
        private string fieldValueTxtField;
        
        /// <remarks/>
        public string ConditionOperatorTxt {
            get {
                return this.conditionOperatorTxtField;
            }
            set {
                this.conditionOperatorTxtField = value;
            }
        }
        
        /// <remarks/>
        public string FieldTxt {
            get {
                return this.fieldTxtField;
            }
            set {
                this.fieldTxtField = value;
            }
        }
        
        /// <remarks/>
        public string FilterOperator {
            get {
                return this.filterOperatorField;
            }
            set {
                this.filterOperatorField = value;
            }
        }
        
        /// <remarks/>
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string FieldValueTxt {
            get {
                return this.fieldValueTxtField;
            }
            set {
                this.fieldValueTxtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceCallDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="ServiceCall", Namespace="http://tempuri.org/")]
    public partial class ServiceCall1 {
        
        private string interfaceIdField;
        
        private System.Nullable<int> procedureIdField;
        
        private System.Nullable<int> authorIdField;
        
        private System.Nullable<int> closureIdField;
        
        private int idField;
        
        private System.Nullable<int> categoryIdField;
        
        private int statusIdField;
        
        private System.Nullable<int> customerIdField;
        
        private System.Nullable<int> receptorIdField;
        
        private System.Nullable<int> responsibleIdField;
        
        private string commentaryField;
        
        private string descriptionField;
        
        private string formatDescriptionField;
        
        private System.Nullable<decimal> estimatedCostField;
        
        private System.Nullable<System.DateTime> openedDateField;
        
        private System.Nullable<System.DateTime> attentionRealDateField;
        
        private System.Nullable<System.DateTime> attentionEstimatedDateField;
        
        private System.Nullable<System.DateTime> solutionRealDateField;
        
        private System.Nullable<System.DateTime> closedDateField;
        
        private System.Nullable<System.DateTime> expiredDateField;
        
        private System.Nullable<int> idbyProjectField;
        
        private System.Nullable<int> modifierIdField;
        
        private System.Nullable<int> projectIdField;
        
        private System.Nullable<int> groupIdField;
        
        private System.Nullable<int> impactIdField;
        
        private System.Nullable<int> involvedCiField;
        
        private System.Nullable<int> involvedCompanyField;
        
        private System.Nullable<int> involvedUserField;
        
        private System.Nullable<int> priorityIdField;
        
        private System.Nullable<int> currentProgressField;
        
        private System.Nullable<decimal> realCostField;
        
        private System.Nullable<decimal> servCostField;
        
        private int registryTypeIdField;
        
        private System.Nullable<int> serviceIdField;
        
        private System.Nullable<int> slaIdField;
        
        private System.Nullable<int> currentTimeField;
        
        private System.Nullable<int> urgencyIdField;
        
        private System.Nullable<int> companyIdField;
        
        private System.Nullable<int> ciIdField;
        
        private System.Nullable<int> attentionTimeField;
        
        private System.Nullable<int> solutionTimeField;
        
        private System.Nullable<System.DateTime> sdbLastShotField;
        
        private System.Nullable<int> routingTypeField;
        
        private string subjectField;
        
        private System.Nullable<int> ucIdField;
        
        private string descriptionNoHtmlField;
        
        private string commentaryNoHtmlField;
        
        /// <remarks/>
        public string interfaceId {
            get {
                return this.interfaceIdField;
            }
            set {
                this.interfaceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProcedureId {
            get {
                return this.procedureIdField;
            }
            set {
                this.procedureIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AuthorId {
            get {
                return this.authorIdField;
            }
            set {
                this.authorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClosureId {
            get {
                return this.closureIdField;
            }
            set {
                this.closureIdField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReceptorId {
            get {
                return this.receptorIdField;
            }
            set {
                this.receptorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ResponsibleId {
            get {
                return this.responsibleIdField;
            }
            set {
                this.responsibleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Commentary {
            get {
                return this.commentaryField;
            }
            set {
                this.commentaryField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FormatDescription {
            get {
                return this.formatDescriptionField;
            }
            set {
                this.formatDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> EstimatedCost {
            get {
                return this.estimatedCostField;
            }
            set {
                this.estimatedCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> OpenedDate {
            get {
                return this.openedDateField;
            }
            set {
                this.openedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AttentionRealDate {
            get {
                return this.attentionRealDateField;
            }
            set {
                this.attentionRealDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AttentionEstimatedDate {
            get {
                return this.attentionEstimatedDateField;
            }
            set {
                this.attentionEstimatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SolutionRealDate {
            get {
                return this.solutionRealDateField;
            }
            set {
                this.solutionRealDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.closedDateField;
            }
            set {
                this.closedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpiredDate {
            get {
                return this.expiredDateField;
            }
            set {
                this.expiredDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IdbyProject {
            get {
                return this.idbyProjectField;
            }
            set {
                this.idbyProjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ModifierId {
            get {
                return this.modifierIdField;
            }
            set {
                this.modifierIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ImpactId {
            get {
                return this.impactIdField;
            }
            set {
                this.impactIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InvolvedCi {
            get {
                return this.involvedCiField;
            }
            set {
                this.involvedCiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InvolvedCompany {
            get {
                return this.involvedCompanyField;
            }
            set {
                this.involvedCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InvolvedUser {
            get {
                return this.involvedUserField;
            }
            set {
                this.involvedUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PriorityId {
            get {
                return this.priorityIdField;
            }
            set {
                this.priorityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CurrentProgress {
            get {
                return this.currentProgressField;
            }
            set {
                this.currentProgressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> RealCost {
            get {
                return this.realCostField;
            }
            set {
                this.realCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ServCost {
            get {
                return this.servCostField;
            }
            set {
                this.servCostField = value;
            }
        }
        
        /// <remarks/>
        public int RegistryTypeId {
            get {
                return this.registryTypeIdField;
            }
            set {
                this.registryTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ServiceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SlaId {
            get {
                return this.slaIdField;
            }
            set {
                this.slaIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CurrentTime {
            get {
                return this.currentTimeField;
            }
            set {
                this.currentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UrgencyId {
            get {
                return this.urgencyIdField;
            }
            set {
                this.urgencyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CompanyId {
            get {
                return this.companyIdField;
            }
            set {
                this.companyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CiId {
            get {
                return this.ciIdField;
            }
            set {
                this.ciIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AttentionTime {
            get {
                return this.attentionTimeField;
            }
            set {
                this.attentionTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SolutionTime {
            get {
                return this.solutionTimeField;
            }
            set {
                this.solutionTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SdbLastShot {
            get {
                return this.sdbLastShotField;
            }
            set {
                this.sdbLastShotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RoutingType {
            get {
                return this.routingTypeField;
            }
            set {
                this.routingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UcId {
            get {
                return this.ucIdField;
            }
            set {
                this.ucIdField = value;
            }
        }
        
        /// <remarks/>
        public string DescriptionNoHtml {
            get {
                return this.descriptionNoHtmlField;
            }
            set {
                this.descriptionNoHtmlField = value;
            }
        }
        
        /// <remarks/>
        public string CommentaryNoHtml {
            get {
                return this.commentaryNoHtmlField;
            }
            set {
                this.commentaryNoHtmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceCallDescription : ServiceCall1 {
        
        private System.Nullable<decimal> effortField;
        
        private string projectNameField;
        
        private string categoryHierarchyField;
        
        private string backgroundColorRgbField;
        
        private string foregroundColorRgbField;
        
        private string autorNameField;
        
        private string registryTypeNameField;
        
        private string priorityNameField;
        
        private string groupNameField;
        
        private string responsibleNameField;
        
        private string categoryNameField;
        
        private string companyNameField;
        
        private string customerNameField;
        
        private string statusNameField;
        
        private System.Nullable<int> backgroundColorField;
        
        private System.Nullable<int> foregroundColorField;
        
        private string serviceNameField;
        
        private string ciNameField;
        
        private string closureNameField;
        
        private string impactNameField;
        
        private string modifierNameField;
        
        private string receptorNameField;
        
        private string slaNameField;
        
        private string urgencyNameField;
        
        private System.Nullable<bool> relationChildField;
        
        private System.Nullable<int> finalStatusField;
        
        private System.Nullable<System.DateTime> emaildateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> effort {
            get {
                return this.effortField;
            }
            set {
                this.effortField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryHierarchy {
            get {
                return this.categoryHierarchyField;
            }
            set {
                this.categoryHierarchyField = value;
            }
        }
        
        /// <remarks/>
        public string BackgroundColorRgb {
            get {
                return this.backgroundColorRgbField;
            }
            set {
                this.backgroundColorRgbField = value;
            }
        }
        
        /// <remarks/>
        public string ForegroundColorRgb {
            get {
                return this.foregroundColorRgbField;
            }
            set {
                this.foregroundColorRgbField = value;
            }
        }
        
        /// <remarks/>
        public string AutorName {
            get {
                return this.autorNameField;
            }
            set {
                this.autorNameField = value;
            }
        }
        
        /// <remarks/>
        public string RegistryTypeName {
            get {
                return this.registryTypeNameField;
            }
            set {
                this.registryTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityName {
            get {
                return this.priorityNameField;
            }
            set {
                this.priorityNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string ResponsibleName {
            get {
                return this.responsibleNameField;
            }
            set {
                this.responsibleNameField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string StatusName {
            get {
                return this.statusNameField;
            }
            set {
                this.statusNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BackgroundColor {
            get {
                return this.backgroundColorField;
            }
            set {
                this.backgroundColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ForegroundColor {
            get {
                return this.foregroundColorField;
            }
            set {
                this.foregroundColorField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        public string CiName {
            get {
                return this.ciNameField;
            }
            set {
                this.ciNameField = value;
            }
        }
        
        /// <remarks/>
        public string ClosureName {
            get {
                return this.closureNameField;
            }
            set {
                this.closureNameField = value;
            }
        }
        
        /// <remarks/>
        public string ImpactName {
            get {
                return this.impactNameField;
            }
            set {
                this.impactNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModifierName {
            get {
                return this.modifierNameField;
            }
            set {
                this.modifierNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReceptorName {
            get {
                return this.receptorNameField;
            }
            set {
                this.receptorNameField = value;
            }
        }
        
        /// <remarks/>
        public string SlaName {
            get {
                return this.slaNameField;
            }
            set {
                this.slaNameField = value;
            }
        }
        
        /// <remarks/>
        public string UrgencyName {
            get {
                return this.urgencyNameField;
            }
            set {
                this.urgencyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> RelationChild {
            get {
                return this.relationChildField;
            }
            set {
                this.relationChildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> FinalStatus {
            get {
                return this.finalStatusField;
            }
            set {
                this.finalStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> emaildate {
            get {
                return this.emaildateField;
            }
            set {
                this.emaildateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListCompletedEventHandler(object sender, ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListGrdCompletedEventHandler(object sender, ListGrdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGrdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGrdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListbyClientCompletedEventHandler(object sender, ListbyClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListbyClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListbyClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListClosedCompletedEventHandler(object sender, ListClosedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListClosedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListClosedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListGrdbyProjectCompletedEventHandler(object sender, ListGrdbyProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGrdbyProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGrdbyProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListGrdNextToEndCompletedEventHandler(object sender, ListGrdNextToEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGrdNextToEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGrdNextToEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListbyGroupCompletedEventHandler(object sender, ListbyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListbyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListbyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetObjectCompletedEventHandler(object sender, GetObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateCompletedEventHandler(object sender, UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListGrdSearchCompletedEventHandler(object sender, ListGrdSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGrdSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGrdSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListRelationProblemCompletedEventHandler(object sender, ListRelationProblemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRelationProblemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRelationProblemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddRelationProblemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteRelationProblemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteRelationChangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteRelationServiceCallCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateRelationProblemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateRelationChangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateRelationServiceCallCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddRelationIncidentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddRelationChangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddRelationServiceCallCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteRelationIncidentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateRelationIncidentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListRelationIncidentCompletedEventHandler(object sender, ListRelationIncidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRelationIncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRelationIncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListRelationChangeCompletedEventHandler(object sender, ListRelationChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRelationChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRelationChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListRelationServiceCallCompletedEventHandler(object sender, ListRelationServiceCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRelationServiceCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRelationServiceCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListFieldsCompletedEventHandler(object sender, ListFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListOperatorsCompletedEventHandler(object sender, ListOperatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOperatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOperatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchOperator[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchOperator[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListValuesCompletedEventHandler(object sender, ListValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListRecursiveValuesCompletedEventHandler(object sender, ListRecursiveValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRecursiveValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRecursiveValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchRecursiveValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchRecursiveValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListRelationArticleCompletedEventHandler(object sender, ListRelationArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRelationArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRelationArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListServiceCallbyCiCompletedEventHandler(object sender, ListServiceCallbyCiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListServiceCallbyCiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListServiceCallbyCiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEffortCompletedEventHandler(object sender, GetEffortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEffortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEffortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTaskCompletedEventHandler(object sender, GetTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetObjectInferaceCompletedEventHandler(object sender, GetObjectInferaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectInferaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectInferaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ListbyGroupDateCompletedEventHandler(object sender, ListbyGroupDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListbyGroupDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListbyGroupDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCallDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCallDescription[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591